{"remainingRequest":"/Users/david/Study/SJTU/Courses/SE/Karaoke/Project/WebUpload/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/david/Study/SJTU/Courses/SE/Karaoke/Project/WebUpload/client/src/components/Songs.vue?vue&type=style&index=0&id=05536afe&scoped=true&lang=css&","dependencies":[{"path":"/Users/david/Study/SJTU/Courses/SE/Karaoke/Project/WebUpload/client/src/components/Songs.vue","mtime":1619516695000},{"path":"/Users/david/Study/SJTU/Courses/SE/Karaoke/Project/WebUpload/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/david/Study/SJTU/Courses/SE/Karaoke/Project/WebUpload/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/david/Study/SJTU/Courses/SE/Karaoke/Project/WebUpload/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/david/Study/SJTU/Courses/SE/Karaoke/Project/WebUpload/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/david/Study/SJTU/Courses/SE/Karaoke/Project/WebUpload/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiAKCi5oZWFkZXItdGl0bGUgewogIGZsb2F0OiBsZWZ0Owp9CgouaGVhZGVyLWJ1dHRvbiB7CiAgZmxvYXQ6IHJpZ2h0OwogIG1hcmdpbi10b3A6IDIwcHg7Cn0KCgojdXBsb2FkLXdyYXBwZXIgewogIG1hcmdpbjogMjBweCAxMHB4Owp9CgoudXBsb2FkLWNhcmQgewogIGZsb2F0OiBsZWZ0OwogIHBhZGRpbmc6IDIwcHg7Cn0KCi5ib3gtY2FyZCB7CiAgbWF4LXdpZHRoOiA0MDBweDsKICBoZWlnaHQ6IDQ1MHB4Owp9CgouY2xlYXJmaXg6YmVmb3JlLAouY2xlYXJmaXg6YWZ0ZXIgewogIGRpc3BsYXk6IHRhYmxlOwogIGNvbnRlbnQ6ICIiOwp9Ci5jbGVhcmZpeDphZnRlciB7CiAgY2xlYXI6IGJvdGgKfQoK"},{"version":3,"sources":["Songs.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyMA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Songs.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <el-container>\n    <el-header class=\"header-wrapper\">\n      <h1 class=\"header-title\">曲库</h1>\n      <div class=\"header-button\">\n        <el-button size=\"middle\" type=\"success\" @click=\"redirectToUpload\">添加歌曲</el-button>\n      </div>\n    </el-header>\n\n    <el-main>\n      <el-table\n        :data=\"songData\"\n        height=\"calc(100vh - 120px)\"\n        border\n        style=\"width: 100%\"\n        :header-cell-style=\"{textAlign: 'center'}\"\n        :cell-style=\"{textAlign: 'center'}\"\n      >\n        <el-table-column\n          fixed\n          prop=\"song_name\"\n          label=\"歌曲\"\n        >\n        </el-table-column>\n\n        <el-table-column\n          fixed\n          prop=\"singer\"\n          label=\"歌手\"\n        >\n        </el-table-column>\n\n        <el-table-column label=\"操作\">\n          <template slot-scope=\"scope\">\n            <el-button\n              size=\"mini\"\n              @click=\"handleEdit(scope.row)\">编辑</el-button>\n            <el-button\n              size=\"mini\"\n              type=\"primary\"\n              @click=\"handleUpload(scope.row)\">上传文件</el-button>\n            <el-button\n              size=\"mini\"\n              type=\"danger\"\n              @click=\"handleDelete(scope.row)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <song-upload-dialog @update-song=\"updateSong\" ref=\"songUploadDialog\" />\n      <song-info-editer @submit-song-info=\"submitSongInfo\" ref=\"songInfoEditer\" />\n    </el-main>\n  </el-container>\n</template>\n\n<script>\nimport axios from 'axios';\nimport SongInfoEditer from './SongInfoEditer';\nimport SongUploadDialog from './SongUploadDialog';\n\nexport default {\n  data() {\n    return {\n      songData: [],\n      editSong: {},\n      editerVisible: false,\n    };\n  },\n\n  components: {\n    SongInfoEditer,\n    SongUploadDialog,\n  },\n\n  methods: {\n    redirectToUpload() {\n      this.$router.push({path: '/upload'});\n    },\n    handleEdit(row) {\n      let song = JSON.parse(JSON.stringify(row));\n      this.$refs.songInfoEditer.song = song;\n      this.$refs.songInfoEditer.visible = true;\n    },\n    handleUpload(row) {\n      let song = JSON.parse(JSON.stringify(row));\n      this.$refs.songUploadDialog.song = song;\n      this.$refs.songUploadDialog.visible = true;\n    },\n    handleDelete(row) {\n      const h = this.$createElement;\n      this.$msgbox({\n        title: '提示',\n        message: h('p', null, [\n          h('span', null, '确认删除歌曲'),\n          h('span', { style: 'color: #af3112' }, row.song_name),\n          h('span', null, '及其所有文件？'),\n        ]),\n        showCancelButton: true,\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning',\n        beforeClose: (action, instance, done) => {\n          if (action === 'confirm') {\n            instance.confirmButtonLoading = true;\n            instance.confirmButtonText = '正在删除';\n            this.deleteSong(row, instance, done);\n          } else {\n            done();\n          }\n        },\n      }).then(() => {\n        this.$message({\n          type: 'success',\n          message: '删除成功!'\n        });\n      });\n    },\n\n    getSongData() {\n      const url = process.env.VUE_APP_AJAX_URL + '/getSongs';\n      axios.get(url)\n        .then((response) => {\n          this.songData = response.data;\n        })\n        .catch((error) => {\n          console.log(error);\n          alert(\"Error!\");\n        });\n    },\n    deleteSong(song, instance, done) {\n      const url = process.env.VUE_APP_AJAX_URL + '/deleteSong';\n      axios.delete(url, { data: { id: song.id }})\n        .then(() => {\n          this.getSongData();\n          instance.confirmButtonLoading = false;\n          done();\n        })\n        .catch((error) => {\n          console.log(error);\n          alert(\"Error!\");\n        });\n    },\n    submitSongInfo(song) {\n      const url = process.env.VUE_APP_AJAX_URL + '/updateSongInfo';\n      axios.post(url, song)\n        .then(() => {\n          this.$refs.songInfoEditer.visible = false;\n          this.$message({\n            message: '成功更新歌曲信息！',\n            type: 'success',\n          });\n          this.getSongData();\n        })\n        .catch((error) => {\n          console.log(error);\n          this.$message({\n            message: '歌曲信息更新失败。',\n            type: 'error',\n          });\n        });\n    },\n\n    updateSong(id) {\n\n      const url = process.env.VUE_APP_AJAX_URL + '/uploadOneFile/' + id;\n      let uploadForm = new FormData();\n      let field = this.$refs.songUploadDialog.field;\n      let uploadFile = this.$refs.songUploadDialog.uploadFile;\n      uploadForm.append(field, uploadFile);\n\n      let config = { \n        headers: { \"Content-Type\": \"multipart/form-data\" }\n      };\n\n      axios.post(url, uploadForm, config)\n        .then(() => {\n          this.$refs.songUploadDialog.uploading = false;\n          this.$refs.songUploadDialog.resetDialog();\n          this.$message({\n            message: '成功上传文件！',\n            type: 'success',\n          });\n        })\n        .catch(() => {\n          this.$refs.songUploadDialog.uploading = false;\n          this.$message({\n            message: '文件上传失败。',\n            type: 'error',\n          });\n        });\n    },\n  },\n\n  created() {\n    this.getSongData();\n  }\n};\n</script>\n\n<style scoped> \n\n.header-title {\n  float: left;\n}\n\n.header-button {\n  float: right;\n  margin-top: 20px;\n}\n\n\n#upload-wrapper {\n  margin: 20px 10px;\n}\n\n.upload-card {\n  float: left;\n  padding: 20px;\n}\n\n.box-card {\n  max-width: 400px;\n  height: 450px;\n}\n\n.clearfix:before,\n.clearfix:after {\n  display: table;\n  content: \"\";\n}\n.clearfix:after {\n  clear: both\n}\n\n</style>"]}]}